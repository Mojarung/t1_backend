"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SQL –æ—à–∏–±–∫–∏ —Å JSON –ø–æ–ª—è–º–∏
"""

import requests
import json
import os

def test_json_fix():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JSON cast —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    """
    
    # –ü–æ–ª—É—á–∞–µ–º JWT —Ç–æ–∫–µ–Ω (–Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
    jwt_token = os.getenv('JWT_TOKEN')
    if not jwt_token:
        print("‚ùå JWT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   export JWT_TOKEN='your-jwt-token-here'")
        return
    
    # API endpoint
    base_url = os.getenv('API_BASE_URL', 'http://localhost:8000')
    endpoint = f"{base_url}/candidate-selection/ai-search"
    
    headers = {
        "Authorization": f"Bearer {jwt_token}",
        "Content-Type": "application/json"
    }
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–ø—Ä–æ—Å
    test_request = {
        "job_title": "Python Developer",
        "job_description": "–ò—â–µ–º Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏",
        "required_skills": ["Python"],  # –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –≤—ã–∑—ã–≤–∞–ª SQL –æ—à–∏–±–∫—É
        "max_candidates": 5
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JSON cast –æ—à–∏–±–∫–∏...")
    print(f"üåê Endpoint: {endpoint}")
    print(f"üìã –ó–∞–ø—Ä–æ—Å: {test_request}")
    print("\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
    
    try:
        response = requests.post(endpoint, headers=headers, json=test_request, timeout=30)
        
        print(f"üì° HTTP Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –£–°–ü–ï–•! SQL –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {result.get('total_profiles_found', 0)}")
            print(f"   ü§ñ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ AI: {result.get('processed_by_ai', 0)}")
            print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è: {result.get('processing_time_seconds', 0)}—Å")
            
            candidates = result.get('candidates', [])
            if candidates:
                print(f"   üë• –ö–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(candidates)}")
                for i, candidate in enumerate(candidates[:2], 1):
                    print(f"      {i}. {candidate.get('full_name', 'N/A')} "
                          f"(–æ—Ü–µ–Ω–∫–∞: {candidate.get('match_score', 0):.2f})")
            else:
                print("   üìã –ö–∞–Ω–¥–∏–¥–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–Ω–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ)")
                
        elif response.status_code == 401:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ JWT —Ç–æ–∫–µ–Ω")
        elif response.status_code == 500:
            print("‚ùå –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞:")
            try:
                error_data = response.json()
                error_detail = error_data.get('detail', '')
                if 'json ~~*' in error_detail or 'operator does not exist' in error_detail:
                    print("   üîç –≠–¢–û –°–¢–ê–†–ê–Ø JSON –û–®–ò–ë–ö–ê - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ!")
                    print(f"   üìã –î–µ—Ç–∞–ª–∏: {error_detail[:200]}...")
                else:
                    print(f"   üìã –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {error_detail[:200]}...")
            except:
                print(f"   üìã –û—Ç–≤–µ—Ç: {response.text[:300]}")
        else:
            print(f"‚ùå HTTP {response.status_code}")
            try:
                error_data = response.json()
                print(f"   üìã –î–µ—Ç–∞–ª–∏: {error_data.get('detail', 'Unknown error')}")
            except:
                print(f"   üìã –û—Ç–≤–µ—Ç: {response.text[:200]}")
                
    except requests.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*60)
    print("üìù –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("   ‚úÖ –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200 - JSON cast –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("   ‚ùå –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 500 —Å 'json ~~*' - –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    print("   üîë –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 401 - –ø—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π, –Ω–µ —Å –∫–æ–¥–æ–º")

def main():
    print("üîß –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è JSON cast –æ—à–∏–±–∫–∏")
    print("="*60)
    test_json_fix()

if __name__ == "__main__":
    main()
